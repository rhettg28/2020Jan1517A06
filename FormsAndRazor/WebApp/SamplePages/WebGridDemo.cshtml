@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "WebGrid Demo";

    //to receive incoming data passed as a parameter on the URL address
    //  you will use Request.QueryString["xxxxx"] where xxxxx us the parameter label
    //just like a control, if the parameter label does NOT exitst, QueryString will return a null
    var incomingParameter = Request.QueryString["cid"];

    //test: did a parameter actually exists
    if (string.IsNullOrEmpty(incomingParameter))
    {
        Response.Redirect("MultiRecordQuery.cshtml");
    }

    var db = Database.Open("NWDB");
    var queryCommand = @"SELECT ProductID, ProductName, UnitPrice, QuantityPerUnit, Discontinued 
                         FROM Products 
                         WHERE CategoryID = @0";
    var results = db.Query(queryCommand, incomingParameter);

    //the query will be returning a single value, not a row, not a collection of rows
    //use .QueryValue() to execute the sql command
    //Testing of results would use xxxxx == null
    var getnameCommand = @"SELECT CategoryName
                           FROM Categories
                           WHERE CategoryID = @0";
    var categoryname = db.QueryValue(getnameCommand, incomingParameter);

    //create an instance of the WebGrid
    //notice the collection (results) is passed at the time of instantiation
    //to set your page size, you need to do this on the new command. NOT within the GetHtml()
    var gridinstance = new WebGrid(results, rowsPerPage:3);
}

@section banner{
    <h1>Display a Collection of Records using WebGrid</h1>
}

<div class="row">
    @* to center your web grid on the page, you cna play with your bootstrap offset-nn and col-xx-nn classes *@
    <div class="offset-3 col-md-6">
        <span style="font-size:x-large"><strong>Products for Category @categoryname</strong></span>
        @* use WebGrid
        You DO NOT need to use all columns from your query. If you wish to omit a column, simply do NOT add
            the xxxxx.Column() to your list of display columns
        formatting for a DateTime attribute format: (item) => item.SomeDateField.ToString("MMM dd, yyyy"))*@
        @gridinstance.GetHtml(
            tableStyle: "table table-striped table-bordered table-hover table-dark",
            mode: WebGridPagerModes.All,
            firstText: "First",
            lastText: "Last",
            columns: gridinstance.Columns(
                gridinstance.Column(columnName: "ProductID", header: "ID"),
                gridinstance.Column(columnName: "ProductName", header: "Product"),
                gridinstance.Column(columnName: "QuantityPerUnit", header: "Pkg"),
                gridinstance.Column(columnName: "UnitPrice", header: "$", 
                    format: (item) => item.UnitPrice.ToString("0.00")), // => --Lambda symbol (do the following)
                gridinstance.Column(columnName: "Discontinued", header: "Disc.", 
                    format: @<input name="Discontinued" type="checkbox" 
                                    value="@item.Discontinued" 
                                    @(item.Discontinued == true ? "Checked" : null)
                                    disabled="disabled" />),
                gridinstance.Column(header: "",
                    format: @<text>
                                <a href="~/SamplePages/WebGridDestination.cshtml?pid=@item.ProductID"
                                   onclick="return confirm('Are you sure you wish to view @item.ProductName?')">View</a>
                            </text>)
                ))
    </div>
</div>

